{"version":3,"sources":["CellarBox.js","Cellar.js","BottleInfo.js","App.js","serviceWorker.js","index.js"],"names":["binlookup","x","y","CellarBox","bottles","onHover","onNoHover","onSelect","highlight","binned","forEach","quad","push","allbots","bin","binidx","bots","map","bot","botidx","loc","trans","klasses","bottle","MasterVarietal","replace","length","indexOf","iWine","kls","join","className","key","r","transform","onMouseEnter","onMouseLeave","onClick","splice","width","height","x1","y1","x2","y2","PlaceholderBox","props","bincolumns","label","console","log","Cellar","user","pass","useState","data","setData","index","setIndex","setHighlight","useEffect","url","csv","headers","Host","then","Fuse","id","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","catch","err","bindata","Array","from","elt","binarr","Bin","split","box","error","columns","col","colidx","rows","row","rowidx","htmlFor","type","onChange","evt","results","search","target","value","BottleInfo","Vintage","Wine","Varietal","Valuation","href","rel","getCookie","cname","name","ca","decodeURIComponent","document","cookie","i","c","charAt","substring","App","setUser","setPass","setBottle","defaultValue","username","getElementById","password","window","open","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0PAIIA,G,MAAY,CACd,CACE,CAAEC,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,KAEd,CACE,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,KAEd,CACE,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,KAEd,CACE,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,OAOHC,EAAY,SAAC,GAMnB,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,SACAC,EACI,EADJA,UAGIC,EAAS,CAAC,GAAI,GAAI,GAAI,IAC1BL,EAAQM,SAAQ,SAACT,GACfQ,EAAOR,EAAEU,KAAO,GAAGC,KAAKX,MAG1B,IAAIY,EAAU,GAmCd,OAlCAJ,EAAOC,SAAQ,SAACI,EAAKC,GACnB,IAAIC,EAAOF,EAAIG,KAAI,SAACC,EAAKC,GACvB,IAAIC,EAAMpB,EAAUe,GAAQI,GACxBE,EAAK,oBAAgBD,EAAInB,EAApB,YAAyBmB,EAAIlB,EAA7B,KACLoB,EAAU,GACdA,EAAQV,KAAKM,EAAIK,OAAOC,eAAeC,QAAQ,aAAc,KACzDjB,EAAUkB,OAAS,GACrBJ,EAAQV,MACmC,IAAzCJ,EAAUmB,QAAQT,EAAIK,OAAOK,OACzB,cACA,aAGR,IAAIC,EAAMP,EAAQQ,KAAK,KACvB,OACE,4BACEC,UAAWF,EACXG,IAAKjB,EAAS,IAAMI,EACpBc,EAAE,IACFC,UAAWb,EACXc,aAAc,WACZ9B,EAAQa,EAAIK,SAEda,aAAc,WACZ9B,KAEF+B,QAAS,WACP9B,EAASW,EAAIK,cAKrBV,EAAQyB,OAAR,MAAAzB,EAAO,CAAQA,EAAQa,OAAQ,GAAxB,mBAA8BV,QAGrC,yBAAKe,UAAU,sBACb,yBAAKA,UAAU,aACb,yBAAKQ,MAAM,MAAMC,OAAO,OACtB,0BAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MAAMC,GAAG,QAChC,0BAAMH,GAAG,MAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,QAC/B/B,MAOEgC,EAAiB,SAACC,GAC7B,OAAO,yBAAKf,UAAU,iB,+BCrFpBgB,EAAa,CACf,CAAC,KAAM,KAAM,GAAI,GAAI,GAAI,CAAEC,MAAO,eAClC,CAAC,KAAM,KAAM,EAAG,EAAG,GAAI,CAAEA,MAAO,YAChC,CAAC,KAAM,KAAM,EAAG,EAAG,GAAI,CAAEA,MAAO,UAChC,CAAC,KAAM,KAAM,EAAG,EAAG,GAAI,CAAEA,MAAO,WAChC,CAAC,KAAM,KAAM,EAAG,EAAG,GAAI,CAAEA,MAAO,UAChC,CAAC,KAAM,KAAM,EAAG,GAAI,GAAI,CAAEA,MAAO,UACjC,CAAC,KAAM,KAAM,KAAM,GAAI,GAAI,CAAEA,MAAO,UACpC,CAAC,KAAM,KAAM,GAAI,GAAI,GAAI,CAAEA,MAAO,UAClC,CAAC,KAAM,GAAI,GAAI,GAAI,GAAI,CAAEA,MAAO,aAChC,CAAC,KAAM,GAAI,GAAI,GAAI,GAAI,CAAEA,MAAO,aAChC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,CAAEA,MAAO,mBAGhCC,QAAQC,IAAI,QACL,IAAMC,EAAS,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,KAAMhD,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAAe,EAC9C+C,mBAAS,IADqC,mBAC/DC,EAD+D,KACzDC,EADyD,OAE5CF,mBAAS,MAFmC,mBAE/DG,EAF+D,KAExDC,EAFwD,OAGpCJ,mBAAS,IAH2B,mBAG/D9C,EAH+D,KAGpDmD,EAHoD,KAKtEC,qBAAU,WACR,IAAIC,EACF,kEACAT,EACA,aACAC,EACA,cAEFJ,QAAQC,IAAI,mBACZY,YAAID,EAAK,CACPE,QAAS,CACP,kBAAmB,QACnBC,KAAM,wBACN,kBAAmB,uBAGpBC,MAAK,SAACV,GAsBLC,EAAQD,GACRG,EAAS,IAAIQ,IAAKX,EArBF,CACdY,GAAI,QACJC,YAAY,EACZC,UAAW,GACXC,SAAU,EACVC,SAAU,IACVC,iBAAkB,GAClBC,mBAAoB,EACpBC,KAAM,CACJ,OACA,WACA,MACA,OACA,QACA,WACA,WACA,oBAOLC,OAAM,SAACC,GACN3B,QAAQC,IAAI,0BACZD,QAAQC,IAAI0B,QAEf,CAACxB,EAAMC,IAEV,IAMIwB,EAAUC,MAAMC,KAAKD,MAAM,KAAK7D,KAAI,iBAAM,MAE9CsC,EAAK7C,SAAQ,SAACsE,GACZ,IAAIC,EAASD,EAAIE,IAAIC,MAAM,KAC3B,GAAsB,IAAlBF,EAAOvD,OAAc,CACvB,IAAIR,EAAM,CAAEkE,IAAKH,EAAO,GAAItE,KAAMsE,EAAO,GAAI1D,OAAQyD,GACrDH,EAAQI,EAAO,IAAIrE,KAAKM,QAExB+B,QAAQoC,MAAR,uBAA8BL,EAAIE,MAClCjC,QAAQoC,MAAML,MAIlB,IAAIM,EAAUvC,EAAW9B,KAAI,SAACsE,EAAKC,GACjC,IAAIC,EAAOF,EAAItE,KAAI,SAACyE,EAAKC,GACvB,OAAW,MAAPD,EACK,kBAAC,EAAD,CAAgB1D,IAAK2D,IACJ,kBAARD,EAEd,yBAAK1D,IAAK2D,EAAQ5D,UAAU,SACzB2D,EAAI1C,OAKT,kBAAC,EAAD,CACEhB,IAAK2D,EACLvF,QAASyE,EAAQa,GACjBrF,QAASA,EACTC,UAAWA,EACXC,SAAUA,EACVC,UAAWA,OAIjB,OACE,yBAAKwB,IAAKwD,EAAQzD,UAAU,gBACzB0D,MAIP,OACE,6BACE,yBAAKtB,GAAG,aACN,2BAAOyB,QAAQ,UAAf,YACA,2BAAOC,KAAK,OAAO1B,GAAG,SAAS5B,MAAM,KAAKuD,SAnD/B,SAACC,GAChB,IAAMC,EAAUvC,EAAMwC,OAAOF,EAAIG,OAAOC,OACxCxC,EAAaqC,OAmDX,6BAAMV,GALR,MCxHSc,EAAa,SAAC,GAAgB,IAAd7E,EAAa,EAAbA,OAC3B,GAAIA,EAAQ,CACV,IAAMsC,EACJ,sDAAwDtC,EAAOK,MACjE,OACE,yBAAKuC,GAAG,WACN,+BACE,+BACE,4BACE,wBAAIA,GAAG,QAAQ5C,EAAO8E,QAAU,IAAM9E,EAAO+E,OAE/C,4BACE,wBAAInC,GAAG,YAAY5C,EAAOgF,WAE5B,4BACE,wBAAIpC,GAAG,OAAO5C,EAAO2D,MAEvB,4BACE,wBAAIf,GAAG,SAAS5C,EAAOiF,YAEzB,4BACE,wBAAIrC,GAAG,QACL,uBAAG+B,OAAO,SAASO,KAAM5C,EAAK6C,IAAI,uBAAlC,aAUZ,OAAO,yBAAKvC,GAAG,a,MC7BnB,SAASwC,EAAUC,GAIjB,IAHA,IAAIC,EAAOD,EAAQ,IAEfE,EADgBC,mBAAmBC,SAASC,QACzB9B,MAAM,KACpB+B,EAAI,EAAGA,EAAIJ,EAAGpF,OAAQwF,IAAK,CAElC,IADA,IAAIC,EAAIL,EAAGI,GACY,MAAhBC,EAAEC,OAAO,IACdD,EAAIA,EAAEE,UAAU,GAElB,GAAwB,IAApBF,EAAExF,QAAQkF,GACZ,OAAOM,EAAEE,UAAUR,EAAKnF,OAAQyF,EAAEzF,QAGtC,MAAO,GAGT,IAgEe4F,EAhEH,SAACxE,GAAW,IAAD,EACCQ,mBAASqD,EAAU,aADpB,mBAChBvD,EADgB,KACVmE,EADU,OAECjE,mBAASqD,EAAU,aAFpB,mBAEhBtD,EAFgB,KAEVmE,EAFU,OAGKlE,mBAAS,MAHd,mBAGhB/B,EAHgB,KAGRkG,EAHQ,KA4BrB,OACE,6BACE,yBAAKtD,GAAG,cACN,8BACE,2BAAOyB,QAAQ,YAAf,UACA,2BACEzB,GAAG,WACH0C,KAAK,WACLa,aAActE,EACdyC,KAAK,OACLtD,MAAM,OAER,2BAAOqD,QAAQ,YAAf,cACA,2BACEzB,GAAG,WACH0C,KAAK,WACLhB,KAAK,WACL6B,aAAcrE,EACdd,MAAM,OAER,2BAAOF,QA3CA,WACb,IAAIsF,EAAWX,SAASY,eAAe,YAAYzB,MAC/C0B,EAAWb,SAASY,eAAe,YAAYzB,MACnDoB,EAAQI,GACRH,EAAQK,GACRb,SAASC,OAAS,YAAcU,EAAW,IAC3CX,SAASC,OAAS,YAAcY,EAAW,KAqCbhC,KAAK,SAASM,MAAM,eAE9C,yBAAKhC,GAAG,WAEV,kBAAC,EAAD,CACEf,KAAMA,EACNC,KAAMA,EACNhD,QAzCU,SAACkB,GACfkG,EAAUlG,IAyCNjB,UAtCY,WAChBmH,EAAU,OAsCNlH,SAnCU,SAACW,GACf,IAAM2C,EACJ,sDAAwDtC,EAAOK,MACjEkG,OAAOC,KAAKlE,MAkCV,kBAAC,EAAD,CAAYtC,OAAQA,MCpENyG,QACW,cAA7BF,OAAOxD,SAAS2D,UAEe,UAA7BH,OAAOxD,SAAS2D,UAEhBH,OAAOxD,SAAS2D,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASpB,SAASY,eAAe,SD6H3C,kBAAmBS,WACrBA,UAAUC,cAAcC,MAAMtE,MAAK,SAAAuE,GACjCA,EAAaC,kB","file":"static/js/main.2238053b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./CellarBox.css\";\n\n// For each of the four bins, the positions of three possible bottles in it.\nvar binlookup = [\n  [\n    { x: 50, y: 35 },\n    { x: 35, y: 20 },\n    { x: 65, y: 20 },\n  ],\n  [\n    { x: 80, y: 65 },\n    { x: 65, y: 50 },\n    { x: 80, y: 35 },\n  ],\n  [\n    { x: 35, y: 90 },\n    { x: 65, y: 90 },\n    { x: 50, y: 75 },\n  ],\n  [\n    { x: 20, y: 65 },\n    { x: 35, y: 50 },\n    { x: 20, y: 35 },\n  ],\n];\n\n// A cellar box represnts one box in the cellar, with four\n// sub-compartments that hold 2-3 bottles each.\n//\nexport const CellarBox = ({\n  bottles,\n  onHover,\n  onNoHover,\n  onSelect,\n  highlight,\n}) => {\n  // Map bottles to bins.\n  let binned = [[], [], [], []];\n  bottles.forEach((x) => {\n    binned[x.quad - 1].push(x);\n  });\n  // For each bottle, figure out where it belongs\n  let allbots = [];\n  binned.forEach((bin, binidx) => {\n    let bots = bin.map((bot, botidx) => {\n      let loc = binlookup[binidx][botidx];\n      let trans = `translate(${loc.x},${loc.y})`;\n      let klasses = [];\n      klasses.push(bot.bottle.MasterVarietal.replace(/[^a-zA-Z]/g, \"\"));\n      if (highlight.length > 0) {\n        klasses.push(\n          highlight.indexOf(bot.bottle.iWine) === -1\n            ? \"nohighlight\"\n            : \"highlight\"\n        );\n      }\n      let kls = klasses.join(\" \");\n      return (\n        <circle\n          className={kls}\n          key={binidx + \"-\" + botidx}\n          r=\"8\"\n          transform={trans}\n          onMouseEnter={() => {\n            onHover(bot.bottle);\n          }}\n          onMouseLeave={() => {\n            onNoHover();\n          }}\n          onClick={() => {\n            onSelect(bot.bottle);\n          }}\n        />\n      );\n    });\n    allbots.splice(allbots.length, 0, ...bots);\n  });\n  return (\n    <div className=\"CellarBoxContainer\">\n      <div className=\"CellarBox\">\n        <svg width=\"100\" height=\"100\">\n          <line x1=\"0\" y1=\"0\" x2=\"100\" y2=\"100\" />\n          <line x1=\"100\" y1=\"0\" x2=\"0\" y2=\"100\" />\n          {allbots}\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport const PlaceholderBox = (props) => {\n  return <div className=\"Placeholder\"></div>;\n};\n","// Cellar.js\nimport React, { useState, useEffect } from \"react\";\nimport { CellarBox, PlaceholderBox } from \"./CellarBox\";\nimport { csv } from \"d3-fetch\";\nimport \"./Cellar.css\";\nimport Fuse from \"fuse.js\";\n\nlet bincolumns = [\n  [null, null, 34, 35, 36, { label: \"Aging wine\" }],\n  [null, null, 1, 6, 11, { label: \"Special\" }],\n  [null, null, 2, 7, 12, { label: \"World\" }],\n  [null, null, 3, 8, 13, { label: \"France\" }],\n  [null, null, 4, 9, 14, { label: \"Italy\" }],\n  [null, null, 5, 10, 15, { label: \"US-CA\" }],\n  [null, null, null, 24, 29, { label: \"US-CA\" }],\n  [null, null, 20, 25, 30, { label: \"US-CA\" }],\n  [null, 17, 21, 26, 31, { label: \"US-Other\" }],\n  [null, 18, 22, 27, 32, { label: \"US-Other\" }],\n  [16, 19, 23, 28, 33, { label: \"White & Sweet\" }],\n];\n\nconsole.log(\"here\");\nexport const Cellar = ({ user, pass, onHover, onNoHover, onSelect }) => {\n  const [data, setData] = useState([]);\n  const [index, setIndex] = useState(null);\n  const [highlight, setHighlight] = useState([]);\n\n  useEffect(() => {\n    let url =\n      \"https://www.cellartracker.com/xlquery.asp?table=Inventory&User=\" +\n      user +\n      \"&Password=\" +\n      pass +\n      \"&Format=csv\";\n\n    console.log(\"let's go fetch!\");\n    csv(url, {\n      headers: {\n        \"Accept-Language\": \"en-us\",\n        Host: \"www.cellartracker.com\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n      },\n    })\n      .then((data) => {\n        // Options for the search index.\n        const options = {\n          id: \"iWine\",\n          shouldSort: true,\n          threshold: 0.3,\n          location: 0,\n          distance: 100,\n          maxPatternLength: 32,\n          minMatchCharLength: 1,\n          keys: [\n            \"Wine\",\n            \"Varietal\",\n            \"Bin\",\n            \"Type\",\n            \"Color\",\n            \"Category\",\n            \"Producer\",\n            \"BottleNote\",\n          ],\n        };\n\n        setData(data);\n        setIndex(new Fuse(data, options));\n      })\n      .catch((err) => {\n        console.log(\"Some error on fetching\");\n        console.log(err);\n      });\n  }, [user, pass]);\n\n  const doSearch = (evt) => {\n    const results = index.search(evt.target.value);\n    setHighlight(results);\n  };\n\n  // FIXME: This syntax seems wrong.  And the hard-coded constant is unfortunate.\n  let bindata = Array.from(Array(40)).map(() => []);\n\n  data.forEach((elt) => {\n    let binarr = elt.Bin.split(\"-\");\n    if (binarr.length === 2) {\n      let bot = { box: binarr[0], quad: binarr[1], bottle: elt };\n      bindata[binarr[0]].push(bot);\n    } else {\n      console.error(`Unknown bin: ${elt.Bin}`);\n      console.error(elt);\n    }\n  });\n\n  let columns = bincolumns.map((col, colidx) => {\n    let rows = col.map((row, rowidx) => {\n      if (row == null) {\n        return <PlaceholderBox key={rowidx} />;\n      } else if (typeof row === \"object\") {\n        return (\n          <div key={rowidx} className=\"Label\">\n            {row.label}\n          </div>\n        );\n      }\n      return (\n        <CellarBox\n          key={rowidx}\n          bottles={bindata[row]}\n          onHover={onHover}\n          onNoHover={onNoHover}\n          onSelect={onSelect}\n          highlight={highlight}\n        />\n      );\n    });\n    return (\n      <div key={colidx} className=\"CellarColumn\">\n        {rows}\n      </div>\n    );\n  });\n  return (\n    <div>\n      <div id=\"searchbox\">\n        <label htmlFor=\"search\">Search: </label>\n        <input type=\"text\" id=\"search\" width=\"40\" onChange={doSearch} />\n      </div>\n      <div>{columns}</div>;\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const BottleInfo = ({ bottle }) => {\n  if (bottle) {\n    const url =\n      \"https://www.cellartracker.com/inmycellar.asp?iWine=\" + bottle.iWine;\n    return (\n      <div id=\"tooltip\">\n        <table>\n          <tbody>\n            <tr>\n              <td id=\"name\">{bottle.Vintage + \" \" + bottle.Wine}</td>\n            </tr>\n            <tr>\n              <td id=\"varietal\">{bottle.Varietal}</td>\n            </tr>\n            <tr>\n              <td id=\"bin\">{bottle.Bin}</td>\n            </tr>\n            <tr>\n              <td id=\"value\">{bottle.Valuation}</td>\n            </tr>\n            <tr>\n              <td id=\"link\">\n                <a target=\"_blank\" href={url} rel=\"noopener noreferrer\">\n                  link\n                </a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  } else {\n    return <div id=\"tooltip\"></div>;\n  }\n};\n","import React, { useState } from \"react\";\nimport { Cellar } from \"./Cellar\";\nimport { BottleInfo } from \"./BottleInfo\";\nimport \"./App.css\";\n\nfunction getCookie(cname) {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(\";\");\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nconst App = (props) => {\n  let [user, setUser] = useState(getCookie(\"username\"));\n  let [pass, setPass] = useState(getCookie(\"password\"));\n  let [bottle, setBottle] = useState(null);\n\n  const doForm = () => {\n    let username = document.getElementById(\"username\").value;\n    let password = document.getElementById(\"password\").value;\n    setUser(username);\n    setPass(password);\n    document.cookie = \"username=\" + username + \";\";\n    document.cookie = \"password=\" + password + \";\";\n  };\n\n  const onHover = (bottle) => {\n    setBottle(bottle);\n  };\n\n  const onNoHover = () => {\n    setBottle(null);\n  };\n\n  const onClick = (bot) => {\n    const url =\n      \"https://www.cellartracker.com/inmycellar.asp?iWine=\" + bottle.iWine;\n    window.open(url);\n  };\n\n  return (\n    <div>\n      <div id=\"connection\">\n        <form>\n          <label htmlFor=\"username\">User: </label>\n          <input\n            id=\"username\"\n            name=\"username\"\n            defaultValue={user}\n            type=\"text\"\n            width=\"16\"\n          />\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            defaultValue={pass}\n            width=\"24\"\n          />\n          <input onClick={doForm} type=\"button\" value=\"Reconnect\" />\n        </form>\n        <div id=\"error\"></div>\n      </div>\n      <Cellar\n        user={user}\n        pass={pass}\n        onHover={onHover}\n        onNoHover={onNoHover}\n        onSelect={onClick}\n      />\n      <BottleInfo bottle={bottle} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}